seed: 4
log_every_n_step: 1
train:
    batch_size: 2048
    batch_type: 'all_images'
    num_work: 28
    factor: 4
    randomized: True
    white_bkgd: False
    surface: True
    surface_start_step: 0.4 # float for fraction of epochs
    sample_num: 'n45_46_72'
    sample_start: 0
val:
    batch_size: 1
    batch_type: 'single_image'  # For "single_image", the batch must set to 1
    num_work: 28
    factor: 4
    randomized: False
    white_bkgd: False
    check_every_n_epoch: 10  # int for num of epochs
    chunk_size: 512  # The amount of input rays in a forward propagation
nerf:
    mlp_name: 'mipnerf' # The type of nerf, 'mipnerf' or 'panonerf'
    num_env_samples: 10 # The number of samples per rays for env.
    num_ray_samples: 10
    num_samples: 64  # The number of samples per level.
    num_levels: 2  # The number of sampling levels.
    resample_padding: 0.01  # Dirichlet/alpha "padding" on the histogram.
    stop_resample_grad: True  # If True, don't backprop across levels')
    use_viewdirs: True  # If True, use view directions as a condition.
    disparity: False  # If True, sample linearly in disparity, not in depth.
    ray_shape: 'cone'  # The shape of cast rays ('cone' or 'cylinder').
    min_deg_point: 0  # Min degree of positional encoding for 3D points.
    max_deg_point: 16  # Max degree of positional encoding for 3D points.
    deg_view: 4  # Degree of positional encoding for viewdirs.
    density_activation: 'softplus'  # Density activation.
    density_noise: 0.  # Standard deviation of noise added to raw density.
    density_bias: -1.  # The shift added to raw densities pre-activation.
    rgb_activation: 'softplus'  # The RGB activation.
    alb_activation: 'sigmoid'  # The albedo activation.
    rgb_padding: 0  # Padding added to the RGB outputs.
    disable_integration: False  # If True, use PE instead of IPE.
    append_identity: Ture  # If True, append original view direction features
    mlp:
        num_density_channels: 5  # The number of density channels.
        net_depth: 8  # The depth of the first part of MLP.
        net_width: 256  # The width of the first part of MLP.
        net_depth_condition: 1  # The depth of the second part of MLP.
        net_width_condition: 128  # The width of the second part of MLP.
        net_activation: 'relu'  # The activation function.
        skip_index: 4  # Add a skip connection to the output of every N layers.
        num_rgb_channels: 3  # The number of RGB channels.
optimizer:
    lr_init: 2e-4  # The initial learning rate.
    lr_final: 2e-5  # The final learning rate.
    lr_delay_steps: 120  # The number of "warmup" learning steps.
    lr_delay_mult: 0.01  # How much sever the "warmup" should be.
    max_steps: 44000  # same as regnerf
loss:
    disable_multiscale_loss: False
    coarse_loss_mult: 0.1
    surface_loss: 0
    ort_loss: 0
    chrom_loss: 0
checkpoint:
    resume_path: None
